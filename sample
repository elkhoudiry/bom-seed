{http://maven.apache.org/POM/4.0.0},
project[
attributes={{http://www.w3.org/2001/XMLSchema-instance}schemaLocation=http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd};
value=[
{http://maven.apache.org/POM/4.0.0}
modelVersion[attributes={}; value=[4.0.0]],
{http://maven.apache.org/POM/4.0.0}
groupId[attributes={}; value=[cz.orany]],
{http://maven.apache.org/POM/4.0.0}
artifactId[attributes={}; value=[bom]],
{http://maven.apache.org/POM/4.0.0}
version[attributes={}; value=[1.0.0-SNAPSHOT]],
{http://maven.apache.org/POM/4.0.0}
packaging[attributes={}; value=[pom]],
properties[attributes={}; value=[groovy.version[attributes={}; value=2.5.6]]],
dependencyManagement[
attributes={};
value=[
dependencies[
attributes={};
value=[
dependency[attributes={}; value=[groupId[attributes={}; value=org.codehaus.groovy], artifactId[attributes={}; value=groovy], version[attributes={}; value=${groovy.version}]]],
dependency[attributes={}; value=[groupId[attributes={}; value=org.codehaus.groovy], artifactId[attributes={}; value=groovy-all], version[attributes={}; value=${groovy.version}]]],
dependency[attributes={}; value=[groupId[attributes={}; value=org.codehaus.groovy], artifactId[attributes={}; value=groovy-json], version[attributes={}; value=2.5.6]]]
]
]
]
]
]
]


distributionManagement[
attributes={};
value=[
{http://maven.apache.org/POM/4.0.0}
relocation[attributes={}; value=[{http://maven.apache.org/POM/4.0.0}groupId[attributes={}; value=[org.codehaus.groovy]], {http://maven.apache.org/POM/4.0.0}artifactId[attributes={}; value=[groovy-json]], {http://maven.apache.org/POM/4.0.0}version[attributes={}; value=[${groovy-json=2.5.6.value}]]]]]], {http://maven.apache.org/POM/4.0.0}properties[attributes={}; value=[{http://maven.apache.org/POM/4.0.0}groovy.version[attributes={}; value=[2.5.6]]]]]]
















import org.gradle.api.publish.maven.tasks.PublishToMavenRepository

plugins {
    id 'maven-publish'
}

group 'com.elkhoudiry'
version getTagOrDefault('1.0.0-SNAPSHOT')


publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/' + System.getenv('GITHUB_REPOSITORY')
            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            pom.withXml {
                def xml = asNode()

                xml.children().last() + {
                    def mkp = delegate

                    File versionPropertiesFile = new File("$projectDir/src/main/versions/_versions.properties")
                    def versionProperties = new Properties()
                    versionProperties.load(new StringReader(versionPropertiesFile.text))

                    mkp.properties {
                        for (dep in versionProperties.entrySet()) {
                            mkp."${dep.key}"(dep.value)
                        }
                    }

                    mkp.dependencyManagement {
                        mkp.dependencies {
                            for (File propertyFile in new File("$projectDir/src/main/versions").listFiles()) {

                                if (propertyFile.name == '_versions.properties') {
                                    continue
                                }

                                String groupIdFromFile = propertyFile.name - '.properties'

                                def versions = new Properties()
                                versions.load(new StringReader(propertyFile.text))

                                for (pair in versions.entrySet()) {
                                    mkp.dependency {
                                        String finalVersion = pair.value ==~ /\d.*/ ? pair.value : "\${$pair.value}"
                                        mkp.groupId groupIdFromFile
                                        mkp.artifactId pair.key
                                        mkp.version finalVersion
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

private static String getTagOrDefault(String defaultValue) {
    String ref = System.getenv('GITHUB_REF')

    if (!ref) {
        return defaultValue
    }

    if (ref.startsWith('refs/tags/')) {
        return ref.substring('refs/tags/'.length())
    }

    return defaultValue
}


tasks.register('incrementalPublishToMavenRepository', IncrementalPublishToMavenRepository) {
    inputDir = file('src')
    publication = project.tasks.getByPath(":publishMavenPublicationToGitHubPackagesRepository").publication
    repository = project.tasks.getByPath(":publishMavenPublicationToGitHubPackagesRepository").repository
}

class IncrementalPublishToMavenRepository extends PublishToMavenRepository {
    @InputDirectory
    def File inputDir

    @OutputDirectory
    File generatedFileDir = project.file("${project.buildDir}/libs")

    @TaskAction
    void perform(IncrementalTaskInputs inputs) {
        println 'hello this should be executed ones'
    }
}















pluginManagement {
    includeBuild("build-logic")
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

rootProject.name = 'bom-elkhoudiry'
